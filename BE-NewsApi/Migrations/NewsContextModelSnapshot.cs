// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using User.Models;

namespace BE_NewsApi.Migrations
{
    [DbContext(typeof(NewsContext))]
    partial class NewsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Article.Models.ArticleItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("article_id");

                    b.Property<string>("Body")
                        .HasColumnName("body");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at");

                    b.Property<string>("Title")
                        .HasColumnName("title");

                    b.Property<int>("Votes")
                        .HasColumnName("votes");

                    b.HasKey("Id");

                    b.ToTable("articles");
                });

            modelBuilder.Entity("Article.Models.TopicItem", b =>
                {
                    b.Property<string>("Slug")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("slug");

                    b.Property<string>("String")
                        .HasColumnName("description");

                    b.HasKey("Slug");

                    b.ToTable("topics");
                });

            modelBuilder.Entity("BE_NewsApi.Models.CommentItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("comment_id");

                    b.Property<int?>("ArticleItemId");

                    b.Property<string>("Body")
                        .HasColumnName("body");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id");

                    b.Property<int>("Votes")
                        .HasColumnName("votes");

                    b.HasKey("Id");

                    b.HasIndex("ArticleItemId");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("User.Models.UserItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("user_id");

                    b.Property<string>("Avatar_url")
                        .HasColumnName("avatar_url");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("Username")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("BE_NewsApi.Models.CommentItem", b =>
                {
                    b.HasOne("Article.Models.ArticleItem")
                        .WithMany("Comments")
                        .HasForeignKey("ArticleItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
